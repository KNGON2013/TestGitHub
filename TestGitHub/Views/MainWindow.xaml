<Window x:Class="TestGitHub.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:TestGitHub.Views"
        xmlns:vb="clr-namespace:TestGitHub.Views.Behaviors"
        xmlns:dataContext="clr-namespace:TestGitHub.ViewModels"
        xmlns:template="clr-namespace:TestGitHub.Libraries.Templates"
        xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="500" Width="800">
    <i:Interaction.Behaviors>
        <vb:MainWindowBehavior/>
    </i:Interaction.Behaviors>
    
    <Window.DataContext>
        <dataContext:MainWindowDataContext/>
    </Window.DataContext>

    <Window.Resources>
        <template:BoolToBrushConverter x:Key="BoolToBrush" FalseValue="Yellow" TrueValue="White"/>
        <template:BoolToStringConverter x:Key="BoolToString" FalseValue="無" TrueValue="有"/>
        <template:BoolToVisibilityConverter x:Key="BoolToVisibility" FalseValue="Collapsed" TrueValue="Visible"/>
        <template:BoolToNullableBoolConverter x:Key="BoolToNBoolReverse" FalseValue="True" TrueValue="False"/>

        <Style TargetType="mwt:ClassicBorderDecorator">
            <Setter Property="BorderStyle" Value="Sunken"/>
            <Setter Property="BorderThickness" Value="1,1,2,2"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        </Style>
        
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="26"/>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type Control}" x:Key="baseStyle">
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Margin" Value="2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource baseStyle}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="250"/>
        </Style>
    </Window.Resources>
    
    <DockPanel>
        <StackPanel DockPanel.Dock="Top"
                    Orientation="Horizontal"
                    VerticalAlignment="Center">
            <Button Command="{Binding CommandTestBoolToValueConverter}"
                    Content="BoolToValueConverter テスト"/>
            
            <CheckBox Content="{Binding IsBoolToValueConverter, Converter={StaticResource BoolToString}}"
                      IsChecked="{Binding IsBoolToValueConverter}"
                      Background="{Binding IsBoolToValueConverter, Converter={StaticResource BoolToBrush}}"/>

            <CheckBox Content="{Binding IsBoolToValueConverter, Converter={StaticResource BoolToString}}"
                      IsChecked="{Binding IsBoolToValueConverter, Converter={StaticResource BoolToNBoolReverse}}"
                      Background="{Binding IsBoolToValueConverter, Converter={StaticResource BoolToBrush}}"/>
        </StackPanel>

        <mwt:ClassicBorderDecorator DockPanel.Dock="Top">
            <TextBlock Text="{Binding ViewSizeChanged, StringFormat=Behavior SizeChanged テスト：(\{0\})}"/>
        </mwt:ClassicBorderDecorator>

        <mwt:ClassicBorderDecorator DockPanel.Dock="Top">
            <TextBlock Text="{Binding ViewLocationChanged, StringFormat=Behavior LocationChanged テスト：(\{0\})}"/>
        </mwt:ClassicBorderDecorator>

        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
            <mwt:ClassicBorderDecorator>
                <TextBlock Text="バリデーション(正の整数)" Width="150"/>
            </mwt:ClassicBorderDecorator>

            <TextBox Width="150"
                 Text="{Binding ValidationInteger, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTextInput">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="IsAllowedUnsignedInput"/>
                    </i:EventTrigger>

                    <i:EventTrigger EventName="MouseWheel">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="MouseWheel"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <mwt:ClassicBorderDecorator>
                <TextBlock Text="{Binding ValidationInteger}" Width="150"/>
            </mwt:ClassicBorderDecorator>
        </StackPanel>

        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
            <mwt:ClassicBorderDecorator>
                <TextBlock Text="バリデーション(double)" Width="150"/>
            </mwt:ClassicBorderDecorator>

            <TextBox Width="150"
                 Text="{Binding ValidationDouble, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTextInput">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="IsAllowedNumericalInput"/>
                    </i:EventTrigger>

                    <i:EventTrigger EventName="MouseWheel">
                        <i:CallMethodAction TargetObject="{Binding}" MethodName="MouseWheel"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <mwt:ClassicBorderDecorator>
                <TextBlock Text="{Binding ValidationDouble}" Width="150"/>
            </mwt:ClassicBorderDecorator>
        </StackPanel>

        <StackPanel DockPanel.Dock="Top"
                    Orientation="Horizontal"
                    VerticalAlignment="Center">
            <Button Command="{Binding CommandTestDialog}"
                    Width="156"
                    Content="ダイアログ表示 テスト"/>
            
            <Button Command="{Binding CommandTestFolder}"
                    Width="151"
                    Content="フォルダ選択 テスト"/>

            <Button Command="{Binding CommandAdd}"
                    IsEnabled="{Binding EnableCommand}"
                    Width="80"
                    Content="Add"/>

            <Button Command="{Binding CommandRun}"
                    IsEnabled="{Binding EnableCommand}"
                    Width="80"
                    Content="Run"/>

            <Button Command="{Binding CommandCancel}"
                    Width="80"
                    Content="Cancel"/>
        </StackPanel>

        <Image Width="400" Height="450" Margin="0" Source="{Binding ImageBitmapSource}"/>

        <ListView ItemsSource="{Binding Items}">
            <ListView.Resources>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                </Style>

                <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
                    <Setter Property="Padding" Value="4,0,0,0"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Height" Value="28"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Command" Value="{Binding CommandItemsSort}"/>
                </Style>
            </ListView.Resources>
            
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>
                <GridView>
                    <GridViewColumn Width="65" Header="No." DisplayMemberBinding="{Binding Header}"/>

                    <GridViewColumn Width="65" Header="経過">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Percentage,StringFormat=\{0\} %}"
                                           FontSize="15"
                                           TextAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Width="65" Header="経過">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="Black" Margin="3" VerticalAlignment="Center">
                                    <Image Width="{Binding ImageWidth}" Height="{Binding ImageHeight}" Margin="0" Source="{Binding ImageBitmapSource}" Stretch="Uniform"/>
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Width="165" Header="Pref">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ListBox ItemsSource="{Binding Prefs}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" IsEnabled="False"/>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Message}" Width="8"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                </GridView>
            </ListView.View>
        </ListView>
    </DockPanel>
    
</Window>
